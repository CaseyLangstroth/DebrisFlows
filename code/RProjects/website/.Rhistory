knitr::include_graphics("C:/Users/clang/Documents/USU/DF_Areas/debris_flow_stats/docs/_main_files/figure-html/database_structure.png") #this probably won't work because my book isnt updating for some reason....
knitr::include_graphics("C:/Users/clang/Documents/USU/DF_Areas/debris_flow_stats/docs/_main_files/figure-html/database_structure.png") #this probably won't work because my book isnt updating for some reason....
knitr::include_graphics("C:/Users/clang/Documents/USU/DF_Areas/debris_flow_stats/docs/_main_files/figure-html/database_structure.png") #this probably won't work because my book isnt updating for some reason....
knitr::include_graphics("C:/Users/clang/Documents/USU/DF_Areas/debris_flow_stats/docs/_main_files/figure-html/database_structure.png")
#### Building a database
#### Connecting and building the db
library(DBI)
df_db = dbConnect(RSQLite::SQLite(), 'df_db')
### Creating tables in db
#DF ID table
dbExecute(df_db, "create table df_ID (
Site varchar(50) NOT NULL primary key,
Fire varchar(50) NOT NULL,
Lat double,
Long double);")
#DF geospatial  volume estimates
dbExecute(df_db, "create table df_volume(
DF_ID varchar(5) primary key,
Site varchar(50) NOT NULL,
EstInt double,
t_0 double,
t_1 double,
t_2 double,
t_3 double,
t_4 double,
t_5 double,
t_6 double,
t_7 double,
t_8 double,
t_9 double,
t_10 double,
foreign key (Site) references df_ID(Site));")
#df grain size distributions (modelled and observed)
dbExecute(df_db, "create table df_gsd(
DF_ID varchar(5) primary key,
Site varchar(50) NOT NULL,
initialsub_D16phi double,
initialsub_D50phi double,
initialsub_D84phi double,
initialsub_D16mm double,
initialsub_D50mm double,
initialsub_D84mm double,
obssur_D16mm double,
obssur_D50mm double,
obssur_D84mm double,
obssub_D16mm double,
obssub_D50mm double,
obssub_D84mm double,
foreign key (Site) references df_ID(Site));
")
#geospatial debris flow morphology
dbExecute(df_db, "create table df_morphology(
DF_ID varchar(5) primary key,
site_name varchar(50) NOT NULL,
runout_L double,
RF_angle double,
int_vol double,
foreign key (site_name) references df_ID(site_name));")
#geospatial reach morphology
dbExecute(df_db, "create table reach_morphology(
reach_ID integer check(reach_ID in (1,2,3)),
DF_name varchar(50) primary key,
DF_ID varchar(5),
site_ID varchar(10) generated always as (DF_ID + '_' + reach_ID) stored,
stream_class char(1) check(stream_class in ('P', 'I')),
reach_lengthm integer,
valley_widthm double,
foreign key (DF_ID) references df_morphology(DF_ID));")
#geospatial/modeled channel morphology
dbExecute(df_db, "create table channel_morphology(
DF_ID varchar(5) primary key,
channel_ID varchar(10),
IMP_BFWm double,
IMP_BFDm double,
flow_depthm double,
D50phi_Snyder double,
D50mm_Snyder double,
river_lengthm double,
sinuosity double,
usdakm2 double,
gradient double,
slope_deg double,
q2m3 double,
q5m3 double,
q10m3 double,
q50m3 double,
q100m3 double,
q500m3 double,
foreign key (channel_ID) references reach_morphology(site_ID));")
#geospatial subcatchment morphology
dbExecute(df_db, "create table subcatchment_morphology(
catch_id integer primary key autoincrement,
DF_ID varchar(5),
drainage_areakm2 double,
relief double,
Cp2008 double,
Cp2011 double,
Cp2016 double,
Sp23 double,
Mean_Elevation double,
MgO double,
Rd double,
WI double,
CS double,
Om double,
Ro double,
AnnP double,
T double,
K double,
HC double,
S23_Areakm2 double,
Bmh_Areakm2 double,
Channel_Devlp char(1) check(Channel_Devlp in ('Y','N')),
foreign key (DF_ID) references reach_morphology(DF_ID));")
### Import csv to dbtables
#first, read csvs
sites = read.csv('Site_Locations.csv', header = T)
setwd("C:/Users/clang/Documents/USU/DF_Areas/debris_flow_stats")
#first, read csvs
sites = read.csv('/data/data_sheets/Site_Locations.csv', header = T)
#first, read csvs
sites = read.csv('//data//data_sheets//Site_Locations.csv', header = T)
library(DBI)
df_db = dbConnect(RSQLite::SQLite(), 'df_db')
#DF ID table
dbExecute(df_db, "create table df_ID (
Site varchar(50) NOT NULL primary key,
Fire varchar(50) NOT NULL,
Lat double,
Long double);")
gross_sum_tdf = read.csv('\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('data//data_sheets//processed_summary_data//Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('//data//data_sheets//processed_summary_data//Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
setwd("C:/Users/clang/Documents/USU/DF_Areas/debris_flow_stats")
gross_sum_tdf = read.csv('\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('debris_flow_stats\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('DF_Areas\\debris_flow_stats\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('USU\\DF_Areas\\debris_flow_stats\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
gross_sum_tdf = read.csv('~\\USU\\DF_Areas\\debris_flow_stats\\data\\data_sheets\\processed_summary_data\\Gross_Summary_Vol_tdf.csv', header = T, na.strings = ' ')
head(gross_sum_tdf)
colnames(gross_sum_tdf) = c('Site','EstInt', '0', '1','2','3','4','5','6','7','8','9','10')
gross_sum_t_perc = gross_sum_tdf
gross_sum_t_perc[,2] = 100
l1 = list(3:13)
for (i in l1){
gross_sum_t_perc[,i] = round((gross_sum_tdf[,i]/gross_sum_tdf[,2]*100),1)
}
View(gross_sum_t_perc)
gross_sum_t_perc = gross_sum_t_perc[-c(14:21, 23),] ## the sites are only in one fire, so this is easy to remove with indexing
brian_head = gross_sum_t_perc[(1:2),]
dollar_ridge = gross_sum_t_perc[(3:10),]
View(dollar_ridge)
twitchell = gross_sum_t_perc[(11:22),]
View(twitchell)
pole_creek = gross_sum_t_perc[(23:25),]
View(pole_creek)
seeley= gross_sum_t_perc[(26:31),]
View(seeley)
shingle= gross_sum_t_perc[(32:33),]
View(shingle)
trail_mountain = gross_sum_t_perc[(34:38),]
View(trail_mountain)
clay_springs = gross_sum_t_perc[39:43,]
View(clay_springs)
View(gross_sum_tdf)
twitchell_FC4 = gross_sum_tdf[14,]
twitchell_FC5_1 = gross_sum_tdf[15,]
twitchell_FC5_2 = gross_sum_tdf[17,]
twitchell_FC7_1 = gross_sum_tdf[16]
twitchell_FC4 = gross_sum_tdf[14,]
twitchell_FC5_1 = gross_sum_tdf[15,]
twitchell_FC5_2 = gross_sum_tdf[17,]
twitchell_FC7_1 = gross_sum_tdf[16,]
twitchell_FC7_2 = gross_sum_tdf[19,]
twitchell_SC2 = gross_sum_tdf[17,]
perc_FC4_1 = twitchell_FC4
perc_FC4_1[,2] = 100
perc_FC5_1 = twitchell_FC5_1
perc_FC5_1[,2] = 100
perc_FC5_2 = twitchell_FC5_2
perc_FC5_2[,2] = 100
perc_FC7_1 = twitchell_FC7_1
perc_FC7_1[,2] = 100
perc_FC7_2 = twitchell_FC7_2
perc_FC7_2[,2] = 100
perc_SC2 = twitchell_SC2
perc_SC2[,2] = 100
for (i in l1) {
perc_FC4_1[,i] = round((twitchell_FC4[,i]/twitchell_FC4[,2]*100),1)
perc_FC5_1[,i] = round((twitchell_FC5_1[,i]/twitchell_FC5_1[,2]*100),1)
perc_FC5_2[,i] = round((twitchell_FC5_2[,i]/twitchell_FC5_2[,2]*100),1)
perc_FC7[,i] = round((twitchell_FC7[,i]/twitchell_FC7[,2]*100),1)
perc_SC2[,i] = round((twitchell_SC2[,i]/twitchell_SC2[,2]*100),1)
}
for (i in l1) {
perc_FC4_1[,i] = round((twitchell_FC4[,i]/twitchell_FC4[,2]*100),1)
perc_FC5_1[,i] = round((twitchell_FC5_1[,i]/twitchell_FC5_1[,2]*100),1)
perc_FC5_2[,i] = round((twitchell_FC5_2[,i]/twitchell_FC5_2[,2]*100),1)
perc_FC7_1[,i] = round((twitchell_FC7_1[,i]/twitchell_FC7_1[,2]*100),1)
perc_FC7_2[,i] =
round((twitchell_FC7_2[,i]/twitchell_FC7_2[,2]*100), 1)
perc_SC2[,i] = round((twitchell_SC2[,i]/twitchell_SC2[,2]*100),1)
}
library(magrittr) #for piping
library(tidyr) #for tibble
library(ggplot2) #for plotting
brian_head_t = brian_head %>% pivot_longer(cols = EstInt:'10' , names_to = 'Time', values_to = 'Volume')
dollar_ridge_t = dollar_ridge %>%pivot_longer(cols = EstInt:'10' , names_to = 'Time', values_to = 'Volume')
twitchell_t = twitchell %>% pivot_longer(cols = EstInt:'10', names_to = 'Time', values_to = 'Volume')
pole_creek_t = pole_creek %>% pivot_longer(cols = EstInt:'10' , names_to = 'Time', values_to = 'Volume')
seeley_t = seeley %>% pivot_longer(cols = EstInt:'10' , names_to = 'Time', values_to = 'Volume')
shingle_t = shingle %>% pivot_longer(cols = EstInt:'10' , names_to = 'Time', values_to = 'Volume')
clay_springs_t = clay_springs %>% pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
trail_mountain_t = trail_mountain %>% pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
gross_sum_t_perc_t = gross_sum_t_perc %>% pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
gross_sum_t_perc_t$Fire = NA
perc_FC4_t = perc_FC4_1 %>%pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
perc_FC5_1_t = perc_FC5_1 %>% pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
perc_FC5_2_t = perc_FC5_2 %>% pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
perc_FC7_1_t = perc_FC7_1 %>% pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
perc_FC7_2_t = perc_FC7_2 %>% pivot_longer(cols = EstInt:'10', names_to = 'Time', values_to = 'Volume')
perc_SC2_t = perc_SC2 %>% pivot_longer(cols =  EstInt:'10' , names_to = 'Time', values_to = 'Volume')
View(gross_sum_t_perc_t)
gross_sum_t_perc_t[c(1:24),4] = 'Brian Head'
gross_sum_t_perc_t[c(25:120),4] = 'Dollar Ridge'
gross_sum_t_perc_t[c(121:264),4]= 'Twitchell'
gross_sum_t_perc_t[c(265:300),4] = 'Pole Creek'
gross_sum_t_perc_t[c(301:372),4] = 'Seeley'
gross_sum_t_perc_t[c(373:396), 4] = 'Shingle'
gross_sum_t_perc_t[c(297:456),4] = 'Trail Mountain'
gross_sum_t_perc_t[c(457:516), 4] = 'Clay Springs'
perc_FC4_t$Fire = 'Twitchell'
perc_FC5_1_t$Fire = 'Twitchell'
perc_FC5_2_t$Fire = 'Twitchell'
perc_FC7__1_t$Fire = 'Twitchell'
gross_sum_t_perc_t[c(1:24),4] = 'Brian Head'
gross_sum_t_perc_t[c(25:120),4] = 'Dollar Ridge'
gross_sum_t_perc_t[c(121:264),4]= 'Twitchell'
gross_sum_t_perc_t[c(265:300),4] = 'Pole Creek'
gross_sum_t_perc_t[c(301:372),4] = 'Seeley'
gross_sum_t_perc_t[c(373:396), 4] = 'Shingle'
gross_sum_t_perc_t[c(297:456),4] = 'Trail Mountain'
gross_sum_t_perc_t[c(457:516), 4] = 'Clay Springs'
perc_FC4_t$Fire = 'Twitchell'
perc_FC5_1_t$Fire = 'Twitchell'
perc_FC5_2_t$Fire = 'Twitchell'
perc_FC7_1_t$Fire = 'Twitchell'
perc_FC7_2_t$Fire = 'Twitchell'
perc_SC2_t$Fire = 'Twitchell'
View(perc_FC5_1)
View(perc_FC5_1_t)
perc_FC5_1_t$Fire = 'Twitchell'
perc_FC5_2_t$Fire = 'Twitchell'
perc_FC7_1_t$Fire = 'Twitchell'
perc_FC7_2_t$Fire = 'Twitchell'
perc_SC2_t$Fire = 'Twitchell'
perc_FC4_t$Fire = 'Twitchell'
perc_FC5_1_t$Fire = 'Twitchell'
gross_vol_all = ggplot(data = na.omit(gross_sum_t_perc_t), aes(Time, Volume, color = Site, group = Site)) + geom_point() + geom_line() + ggtitle('Estimated Percent Volume over Time') + xlab('Time Since Debris Flow (Years)') + ylab('Percent Remaining Volume') + ylim(0,100) + scale_x_discrete(limit = c('EstInt','0', '1','2','3','4','5','6','7','8','9','10')) + theme_bw() + geom_line(data= na.omit(perc_FC5_1_t)) + geom_line(data= na.omit(perc_FC5_2_t)) + geom_line(data= na.omit(perc_FC7_t)) + geom_line(data = na.omit(perc_SC2_t)) +geom_line(data = na.omit(perc_FC4_t)) + geom_point(data = na.omit(perc_FC5_1_t)) + geom_point(data= na.omit(perc_FC5_2_t))  + geom_point(data= na.omit(perc_FC7_1_t)) + geom_point(data= na.omit(perc_FC7_2_t)) + geom_point(data = na.omit(perc_SC2_t)) + geom_point(data = na.omit(perc_FC4_t))
gross_vol_all = ggplot(data = na.omit(gross_sum_t_perc_t), aes(Time, Volume, color = Site, group = Site)) + geom_point() + geom_line() + ggtitle('Estimated Percent Volume over Time') + xlab('Time Since Debris Flow (Years)') + ylab('Percent Remaining Volume') + ylim(0,100) + scale_x_discrete(limit = c('EstInt','0', '1','2','3','4','5','6','7','8','9','10')) + theme_bw() + geom_line(data= na.omit(perc_FC5_1_t)) + geom_line(data= na.omit(perc_FC5_2_t)) + geom_line(data= na.omit(perc_FC7_1_t)) + geom_line(data= na.omit(perc_FC7_2_t))+ geom_line(data = na.omit(perc_SC2_t)) +geom_line(data = na.omit(perc_FC4_t)) + geom_point(data = na.omit(perc_FC5_1_t)) + geom_point(data= na.omit(perc_FC5_2_t))  + geom_point(data= na.omit(perc_FC7_1_t)) + geom_point(data= na.omit(perc_FC7_2_t)) + geom_point(data = na.omit(perc_SC2_t)) + geom_point(data = na.omit(perc_FC4_t))
gross_vol_all
ggsave('C:\\Users\\clang\\Documents\\USU\\DF_Areas\\debris_flow_stats\\data\\figures\\plots\\gross_vol-tdf_all_site.png', plot = gross_vol_all, device = 'png')
gross_vol_all = ggplot(data = na.omit(gross_sum_t_perc_t), aes(Time, Volume, color = Site, group = Site)) + geom_point() + geom_line() + ggtitle('Estimated Percent Volume over Time') + xlab('Time Since Debris Flow (Years)') + ylab('Percent Remaining Volume') + ylim(0,100) + scale_x_discrete(limit = c('EstInt','0', '1','2','3','4','5','6','7','8','9','10')) + theme_bw() + geom_line(data= na.omit(perc_FC5_1_t)) + geom_line(data= na.omit(perc_FC5_2_t)) + geom_line(data= na.omit(perc_FC7_1_t)) + geom_line(data= na.omit(perc_FC7_2_t))+ geom_line(data = na.omit(perc_SC2_t)) +geom_line(data = na.omit(perc_FC4_t)) + geom_point(data = na.omit(perc_FC5_1_t)) + geom_point(data= na.omit(perc_FC5_2_t))  + geom_point(data= na.omit(perc_FC7_1_t)) + geom_point(data= na.omit(perc_FC7_2_t)) + geom_point(data = na.omit(perc_SC2_t)) + geom_point(data = na.omit(perc_FC4_t)) + theme(legend.position = 'none')
gross_vol_all
ggsave('C:\\Users\\clang\\Documents\\USU\\DF_Areas\\debris_flow_stats\\data\\figures\\plots\\gross_vol-tdf_all_site.png', plot = gross_vol_all, device = 'png')
gross_vol_all_45 = ggplot(data = na.omit(gross_sum_t_perc_t), aes(Time, Volume, color = Fire, group = Site)) + geom_point() + geom_line() + ggtitle('Estimated Percent Volume over Time') + xlab('Time Since Debris Flow (Years)') + ylab('Percent Remaining Volume') + ylim(45,100) + scale_x_discrete(limit = c('EstInt','0', '1','2','3','4','5','6','7','8','9','10')) + theme_bw() + geom_line(data= na.omit(perc_FC5_1_t)) + geom_line(data= na.omit(perc_FC5_2_t)) + geom_line(data= na.omit(perc_FC7_1_t)) + geom_line(data = na.omit(perc_SC2_t)) +geom_line(data = na.omit(perc_FC4_t)) + geom_point(data = na.omit(perc_FC5_1_t)) + geom_point(data= na.omit(perc_FC5_2_t))  + geom_point(data= na.omit(perc_FC7_1_t)) + geom_point(data = na.omit(perc_SC2_t)) + geom_point(data = na.omit(perc_FC4_t))+ geom_point(data= na.omit(perc_FC7_2_t))+ geom_line(data= na.omit(perc_FC7_2_t))
gross_vol_all_45
ggsave('C:\\Users\\clang\\Documents\\USU\\DF_Areas\\debris_flow_stats\\data\\figures\\plots\\gross_vol-tdf_all45_fire.png', plot = gross_vol_all_45, device = 'png')
ggsave('C:\\Users\\clang\\Documents\\USU\\DF_Areas\\debris_flow_stats\\data\\figures\\plots\\seeley_vol-tdf.png', plot = gross_voltdf_seeley, device = 'png')
gross_voltdf_seeley = ggplot(data = na.omit(seeley_t), aes(Time, Volume, color = Site, group = Site)) + geom_point() +  xlab('Years since Debris Flow') + ylab('Percent Remaining Volume') +  geom_line() +ggtitle('Seeley Volume')+ ylim(0,100) + scale_x_discrete(limit = c('EstInt', '0', '1', '2', '3','4','5','6','7','8','9')) + theme_bw()
gross_voltdf_seeley
ggsave('C:\\Users\\clang\\Documents\\USU\\DF_Areas\\debris_flow_stats\\data\\figures\\plots\\seeley_vol-tdf.png', plot = gross_voltdf_seeley, device = 'png')
