geom_boxplot() +
labs( x= "Depth Bin", y= "% Silt") +
annotate("text", x=1.5, y=0.65, size=4, label="Sp. Cor = 0.75" ) +
theme_bw()
silt_dep_box
#sand
sand_dep_box <- ggplot(master, mapping = aes(x = as.factor(depth_bin), y = perc_sand)) +
geom_boxplot() +
labs( x= "Depth Bin", y= "% Sand") +
annotate("text", x=2, y=0.9, size=4, label="Sp. Cor = 0.26" ) +
theme_bw()
sand_dep_box
#clay
clay_dep_box <- ggplot(master, mapping = aes(x = as.factor(depth_bin), y = perc_clay)) +
geom_boxplot() +
labs( x= "Depth Bin", y= "% Clay") +
annotate("text", x=2.5, y=0.75, size=4, label="Sp. Cor = -0.71" ) +
theme_bw()
clay_dep_box
#rock
rock_dep_box <- ggplot(master, mapping = aes(x = as.factor(depth_bin), y = perc_rock)) +
geom_boxplot() +
labs( x= "Depth Bin", y= "% Rock") +
annotate("text", x=1, y=0.15, size=4, label="Sp. Cor = 0.76" ) +
theme_bw()
rock_dep_box
## Average Vegetation Height vs. Depth Bin ----
veg_height_box <- ggplot(subset(master, depth_bin != 0), mapping = aes(x = as.factor(depth_bin), y = avg_vegheight)) +
geom_boxplot() +
labs( x= "Depth Bin", y= "Average Vegetation Height (m)") +
annotate("text", x=2.5, y=0.4, size=4, label="Sp. Cor = -0.43" ) +
theme_bw()
veg_height_box
## Average % Cover vs. Depth Bin ----
veg_cover_box <- ggplot(subset(master, depth_bin != 0), mapping = aes(x = as.factor(depth_bin), y = avg_vegcover)) +
geom_boxplot() +
labs( x= "Depth Bin", y= "Average % Cover") +
annotate("text", x=2.5, y=60, size=4, label="Sp. Cor = -0.49" ) +
theme_bw()
veg_cover_box
## Surface Temp vs. Month ----
srf_temp_box <- ggplot(master, mapping = aes(x = as.factor(month), y = Surface_Temp)) +
geom_boxplot() +
labs( x= "Month", y= "Surface Temp") +
annotate("text", x=1.5, y=25, size=4, label="Sp. Cor = 0.92" ) +
theme_bw()
srf_temp_box
srf_temp_box <- ggplot(master, mapping = aes(x = as.factor(month), y = surface_temp)) +
geom_boxplot() +
labs( x= "Month", y= "Surface Temp") +
annotate("text", x=1.5, y=25, size=4, label="Sp. Cor = 0.92" ) +
theme_bw()
srf_temp_box
##Clarity vs. Month ----
clar_box <- ggplot(master, mapping = aes(x = as.factor(month), y = clarity)) +
geom_boxplot() +
labs( x= "Month", y= "Clarity") +
annotate("text", x=3.5, y=8, size=4, label="Sp. Cor = 0.33" ) +
theme_bw()
clar_box
## Conductivity vs. Month ----
cond_box <- ggplot(master, mapping = aes(x = as.factor(month), y = conductivity)) +
geom_boxplot() +
labs( x= "Month", y= "Conductivity") +
annotate("text", x=1.5, y=8.4, size=4, label="Sp. Cor = 0.91" ) +
theme_bw()
cond_box
## Temperature vs. Month ----
# note here that there are 6 less deep sets because the temperatures are cut based on net sets and we only set the net at 30 m 3x instead
# of 9x in the late July set
temp_avg_mon_box <- ggplot(master, mapping = aes(x = as.factor(month), y = temp_avg)) +
geom_boxplot() +
labs( x= "Month", y= "Average Logger Temperature") +
annotate("text", x=1.5, y=22, size=4, label="Sp. Cor = 0.84" ) +
theme_bw()
temp_avg_mon_box
## Temperature vs. Depth Bin ----
# same here
temp_avg_dep_box <- ggplot(master, mapping = aes(x = as.factor(depth_bin), y = temp_avg)) +
geom_boxplot() +
labs( x= "Depth Bin", y= "Average Logger Temperature") +
annotate("text", x=3.5, y=25, size=4, label="Sp. Cor = -0.73" ) +
theme_bw()
temp_avg_dep_box
## put them together ----
blank <- ggplot() +
geom_blank()
blank
comp_box_cor <- grid.arrange(clay_dep_box, sand_dep_box, silt_dep_box, rock_dep_box,
veg_height_box, veg_cover_box,temp_avg_dep_box, blank, srf_temp_box, clar_box, cond_box,
temp_avg_mon_box,
nrow=3, ncol=4)
comp_box_cor
comp_box_cor <- grid.arrange(clay_dep_box, sand_dep_box, silt_dep_box, rock_dep_box,
veg_height_box, veg_cover_box,temp_avg_dep_box, blank, srf_temp_box, clar_box, cond_box,
temp_avg_mon_box,
nrow=3, ncol=4)
comp_box_cor
clar_box <- ggplot(master, mapping = aes(x = as.factor(month), y = clarity)) +
geom_boxplot() +
labs( x= "Month", y= "Clarity") +
annotate("text", x=3, y=8, size=4, label="Sp. Cor = 0.33" ) +
theme_bw()
clar_box
comp_box_cor
comp_box_cor <- grid.arrange(clay_dep_box, sand_dep_box, silt_dep_box, rock_dep_box,
veg_height_box, veg_cover_box,temp_avg_dep_box, blank, srf_temp_box, clar_box, cond_box,
temp_avg_mon_box,
nrow=3, ncol=4)
comp_box_cor
clar_box <- ggplot(master, mapping = aes(x = as.factor(month), y = clarity)) +
geom_boxplot() +
labs( x= "Month", y= "Clarity") +
annotate("text", x=2.5, y=8, size=4, label="Sp. Cor = 0.33" ) +
theme_bw()
comp_box_cor
comp_box_cor <- grid.arrange(clay_dep_box, sand_dep_box, silt_dep_box, rock_dep_box,
veg_height_box, veg_cover_box,temp_avg_dep_box, blank, srf_temp_box, clar_box, cond_box,
temp_avg_mon_box,
nrow=3, ncol=4)
comp_box_cor
#look at raw distribution of data
hist(master$matureAll_num, breaks=20)
help(compositions)
??compositions
summary(M2)
#### INSTALL PACKAGES ----
library(compositions)
sub <- master[,c(17:20)]
View(sub)
comps <- acomp(sub)
plot(comps)
amounts >- aplus(sub)
amounts <- aplus(sub)
plot(amounts)
mean(comps)
warnings()
mean(amounts)
plot(comps) #ternary diagrams
plot(mean(comps), pch=20, add=T, col"red")
plot(mean(comps), pch=20, add=T, col"red")
plot(mean(comps), pch=20, add=T, col="red")
plot(mean(comps), pch=20, add=T, col="red")
ellipses(mean(comps), var(comps), col="red", r=2)
plot(mean(comps), pch=40, add=T, col="red")
ellipses(mean(comps), var(comps), col="blue", r=2)
straight(mean(comps), princomp(comps)$Loadings)
comps <- aplus(sub) #view data as compositions
plot(comps) #ternary diagrams
plot(mean(comps), pch=40, add=T, col="red")
comps <- rcomp(sub) #view data as compositions
plot(comps) #ternary diagrams
comps <- rcomp(sub) #view data as compositions
plot(comps) #ternary diagrams
plot(mean(comps), pch=40, add=T, col="red")
ellipses(mean(comps), var(comps), col="blue", r=2)
straight(mean(comps), princomp(comps)$Loadings)
# view 3+ parts in a scatterplot matric that pits 2 components against some margin of the other components
plot(acomp(sub))
# view 3+ parts in a scatterplot matric that pits 2 components against some margin of the other components
plot(acomp(sub), margin="rcomp")
plot(mean(comps), pch=40, add=T, col="red")
# view 3+ parts in a scatterplot matrix of ternary diagrams that pits 2 components against some margin of the other components
plot(acomp(sub), margin="rcomp")
#show ratio of amounts
boxplot(amounts)
#relative amounts
boxplot(rcomp(sub))
#relative amounts
boxplot(rcomp(sub), dots=T)
#relative amounts
boxplot(acomp(sub), dots=T)
#relative amounts
# set as acomp to see ratios of amounts in log-geometry (more symmetric)
# rcomp simply displays relative portion itself, susceptible to extreme skew
boxplot(acomp(amounts), dots=T)
#relative amounts
# set as acomp to see ratios of amounts in log-geometry (more symmetric)
# rcomp simply displays relative portion itself, susceptible to extreme skew
boxplot(rcomp(amounts), dots=T)
#linear mdoel with CPUE as response and composition as regressors
x <- acomp(master, c("perc_silt", "perc_sand", "perc_rock", "perc_clay"))
comp_lm <- lm(y~idt(x), data=list(y=y, x=x))
y <- master[, 16]
comp_lm <- lm(y~idt(x), data=list(y=y, x=x))
summary(comp_lm)
#### INSTALL PACKAGES ----
library(tidyverse)
library(tidyr)
library(plotrix)
library(cowplot)
library(reshape2)
library(RColorBrewer)
library(gridExtra)
library(knitr)
library(dplyr)
library(lubridate)
library(data.table)
theme_set(theme_cowplot())
clay <- ggplot(master, aes(x=perc_clay, y=matureallCpue)) +
geom_point()+
geom_smooth(method=lm) +
theme(plot.title = element_text(size=16, hjust = 0.5),
axis.text.x = element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14)) +
ylim(0,8) +
scale_color_brewer(palette="Dark2") +
labs(x= "% Clay (<.0005 mm)", y= "CPUE of Fecund Fish (fish/hour)", color = "Month")
clay
sand <- ggplot(master, aes(perc_sand, y=matureallCpue)) +
geom_point()+
geom_smooth(method=lm) +
theme(plot.title = element_text(size=16, hjust = 0.5),
axis.text.x = element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14)) +
ylim(0,8) +
scale_color_brewer(palette="Dark2") +
labs( x= "% Sand (0.05-2 mm)", y= "CPUE of Fecund Fish (fish/hour)")
sand
silt<- ggplot(master, aes(x=perc_silt, y=matureallCpue)) +
geom_point()+
geom_smooth(method=lm) +
theme(plot.title = element_text(size=16, hjust = 0.5),
axis.text.x = element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14)) +
ylim(0,8) +
scale_color_brewer(palette="Dark2") +
labs( x= "% Silt (.0005 - 0.05 mm)", y= "CPUE of Fecund Fish (fish/hour)")
silt
rock <- ggplot(master, aes(x=perc_rock, y=matureallCpue)) +
geom_point()+
geom_smooth(method=lm) +
theme(plot.title = element_text(size=16, hjust = 0.5),
axis.text.x = element_text(size=12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14)) +
ylim(0,8) +
scale_color_brewer(palette="Dark2") +
labs( x= "% Rock (>2 mm)", y= "CPUE of Fecund Fish (fish/hour)")
rock
grid.arrange(clay, sand, silt, rock, nrow=2, ncol=2)
M1 <- glm(matureAll_num ~ perc_silt + offset(log(effort_hours)),
family = poisson(link="log"),
data = master)
summary(M1)
M1 <- glm(matureAll_num ~ perc_sand + offset(log(effort_hours)),
family = poisson(link="log"),
data = master)
summary(M1)
M1 <- glm(matureAll_num ~ perc_clay + offset(log(effort_hours)),
family = poisson(link="log"),
data = master)
summary(M1)
M1 <- glm(matureAll_num ~ perc_rock + offset(log(effort_hours)),
family = poisson(link="log"),
data = master)
summary(M1)
View(hydro_sites)
if(hydro_sites$BottomType4Membership < .001 & hydro_sites$depth_bin == 1, "duh", "WHAT???")
ifelse(hydro_sites$BottomType4Membership < .001 & hydro_sites$depth_bin == 1, "duh", "WHAT???")
ifelse(hydro_sites$BottomType4Membership < .001 & hydro_sites$depth_bin == 1, "WHAT", "duh")
inter <- ifelse(hydro_sites$BottomType4Membership < .001 & hydro_sites$depth_bin == 1, "WHAT", "duh")
length(which(inter == "WHAT"))
ifelse(hydro_sites$BottomType == 4 & hydro_sites$depth_bin == 1, "WHAT", "duh")
inter <- ifelse(hydro_sites$BottomType == 4 & hydro_sites$depth_bin == 1, "WHAT", "duh")
length(which(inter == "WHAT"))
inter <- ifelse(hydro_sites$BottomType == 4 & hydro_sites$depth_bin == 2, "WHAT", "duh")
> length(which(inter == "WHAT"))
inter <- ifelse(hydro_sites$BottomType == 4 & hydro_sites$depth_bin == 2, "WHAT", "duh")
length(which(inter == "WHAT"))
inter <- ifelse(hydro_sites$BottomType == 4 & hydro_sites$depth_bin == 3, "WHAT", "duh")
length(which(inter == "WHAT"))
library(DHARMa)
library(glmmTMB)
library(compositions)
library(robustbase)
master_noNA <- subset(master, master$net_type != "HOP")
sub <- acomp(master_noNA[-c(19,25,34,46),17:20])
depth <- master_noNA[-c(19,25,34,46), 3]
Y <- master_noNA$matureAll_num
Y <- Y[-c(19,25,34,46)]
#Y <- log1p(Y) # dont need this if using a log link (I think...)
eff_hours <- master_noNA[-c(19,25,34,46), 10]
# the model
M3 <- glmmTMB(matureAll_num ~ ilr(sub) + depth + offset(log(eff_hours)),
family = poisson(link="log"))
### GLM W/ POISSON DISTRIBUTION, LOG LINK AND OFFSET FOR HOURS OF DEPTH + ILR(SUBSTRATE) ----
##the data
master_2 <- subset(master, master$net_type != "HOP")
master_2 <- master_2[-c(19,25,34,46),]
View(master_2)
master_2$clay_ilr <- acomp(master_2[,17])
master_2$rock_ilr <- acomp(master_2[,18])
master_2$sand_ilr <- acomp(master_2[,19])
master_2$silt_ilr <- acomp(master_2[,20])
M3 <- glmmTMB(matureAll_num ~ ilr(clay_ilr) + ilr(rock_ilr) + ilr(sand_ilr) + ilr(silt_ilr) + depth + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
M3 <- glmmTMB(matureAll_num ~ ilr(clay_ilr) + ilr(rock_ilr) + ilr(sand_ilr) + ilr(silt_ilr) + depth_bin + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
M3 <- glmmTMB(matureAll_num ~ ilr(clay_ilr) + ilr(rock_ilr) + ilr(sand_ilr) + ilr(silt_ilr) + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
### GLM W/ POISSON DISTRIBUTION, LOG LINK AND OFFSET FOR HOURS OF DEPTH + ILR(SUBSTRATE) ----
##the data
master_2 <- subset(master, master$net_type != "HOP")
rm(master_2)
View(master)
### GLM W/ POISSON DISTRIBUTION, LOG LINK AND OFFSET FOR HOURS OF DEPTH + ILR(SUBSTRATE) ----
##the data
master_2 <- subset(master, master$net_type != "HOP")
master_2$clay_ilr <- acomp(master_2[,17])
master_2$rock_ilr <- acomp(master_2[,18])
master_2$sand_ilr <- acomp(master_2[,19])
master_2$silt_ilr <- acomp(master_2[,20])
M3 <- glmmTMB(matureAll_num ~ ilr(clay_ilr) + ilr(rock_ilr) + ilr(sand_ilr) + ilr(silt_ilr) + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
M3 <- glm(matureAll_num ~ ilr(clay_ilr) + ilr(rock_ilr) + ilr(sand_ilr) + ilr(silt_ilr) + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
View(master_2)
rm(master_2)
### GLM W/ POISSON DISTRIBUTION, LOG LINK AND OFFSET FOR HOURS OF DEPTH + ILR(SUBSTRATE) ----
##the data
master_2 <- subset(master, master$net_type != "HOP")
View(master_2)
master_2$clay_ilr <- acomp(master_2[,17])
master_2$rock_ilr <- acomp(master_2[,18])
master_2$sand_ilr <- acomp(master_2[,19])
master_2$silt_ilr <- acomp(master_2[,20])
M3 <- glm(matureAll_num ~ ilr(clay_ilr) + ilr(rock_ilr) + ilr(sand_ilr) + ilr(silt_ilr) + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
M3 <- glm(matureAll_num ~ clay_ilr + rock_ilr + sand_ilr + silt_ilr + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
summary(M3)
# the model
M3 <- glmmTMB(matureAll_num ~ clay_ilr + rock_ilr + sand_ilr + silt_ilr + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
summary(M3)
M3 <- glmmTMB(matureAll_num ~ ilr(clay_ilr) + rock_ilr + sand_ilr + silt_ilr + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_2)
#master_2 <- master_2[-c(19,25,34,46),]
master_2$clay_ilr <- ilr(acomp(master_2[,17]))
ilr(acomp(master_2[,17]))
rm(master_2)
View(master_noNA)
#master_2 <- master_noNA[-c(19,25,34,46),]
sub_ilr <- acomp(master_noNA[,17:20])
sub_ilr
M3 <- glmmTMB(master_noNA$matureAll_num ~ ilr(sub_ilr) + ordered(master_noNA$depth_bin) + offset(log(master_noNA$effort_hours)),
family = poisson(link="log"))
summary(M3)
#use package DHARMa to test for overdispersion, takes a simulation approach
testDispersion(M3)
opar <- par(mfrow=c(4,4), mar=c(1,1,0.5,0.5), oma=c(3,3,0,0))
for(i in 1:4){
for(j in 1:4){
plot(log(X[,i]/X[,j]), Y, pch=ifelse(i!=j,19,""))
if(i==j){text (x=0, y=mean(range(Y)),
labels=colnames(X)[i],cex=1.5)}
}
}
master_noNA <- subset(master, master$net_type != "HOP")
X <- acomp(master_noNA[-c(19,25,34,46),17:20])
Y <- master_noNA$matureallCpue
Y <- Y[-c(19,25,34,46)]
Y <- log1p(Y)
opar <- par(mfrow=c(4,4), mar=c(1,1,0.5,0.5), oma=c(3,3,0,0))
for(i in 1:4){
for(j in 1:4){
plot(log(X[,i]/X[,j]), Y, pch=ifelse(i!=j,19,""))
if(i==j){text (x=0, y=mean(range(Y)),
labels=colnames(X)[i],cex=1.5)}
}
}
mtext(text=c("pairwise log-ratio", "dependent variable"),
side=c(1,2), at=0.5, line=2, outer=TRUE)
#plot the model
plot(sub_ilr)# I do not understand these **
#use package DHARMa to test for overdispersion, takes a simulation approach
testDispersion(M3)
#use package DHARMa to test for overdispersion, takes a simulation approach
par(mfrow= c(1,1))
testDispersion(M3)
varb <- ilrvar2clr(vcov(M3) [-1,-1])
opar <- par(mfrow = c(1,1), mar=c(1,1,1,1))
Predicted=predict(M3)
plot(Predicted, master_noNA$matureallCpue) #predicted values from the model
abline(0,1) #line of perfect correlation
par(opar)
##model checks are also embedded in the  anova tables
## LOL but actually "the individual ilr coordinates per se have seldom a direct interpretation, and their tests should
## be ignored -this book is poorly written
anova(M3)
par(mfrow=c(2,2))
plot(M3, add.smooth=FALSE)
par(mfrow=c(2,2))
plot(M3, add.smooth=FALSE)
par(mfrow=c(1,1))
StudentizedResiduals <- rstudent(M3)
plot(M3, add.smooth=FALSE)
#confidence intervals
confint(M3)
diagnose(M3)
M3
vcov(M3)
plot(M3)
qqnorm(resid(M3))
qqline(resid(M3))
M3_resids <- simulateResiduals(M3)
plot(M3_resids)
par(mfrow=c(2,2))
plot(M3_resids)
library(car)
par(mfrow=c(2,2))
testDispersion(M3)
par(mfrow=c(2,1))
plot(M3_resids)
if (requireNamespace("car") && getRversion() >= "3.6.0") {
Anova(M3) ## default type II
Anova(M3,type="III")
}
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(M3))
plot(ae)
}
library(effects)
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(M3))
plot(ae)
}
M3_b <- glmmTMB(matureAll_num ~ ilr(sub_ilr) + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_noNA)
summary(M3_b)
summary(M3)
effects_ok <- (requireNamespace("effects") && getRversion() >= "3.6.0")
if (effects_ok) {
(ae <- allEffects(M3))
plot(ae)
}
print(M3)
plot(M3)
#model selection
MuMIn :: dredge(M3)
library(MuMIn)
#model selection
MuMIn :: dredge(M3)
# the model
options(na.action = "na.fail")
M3 <- glmmTMB(matureAll_num ~ ilr(sub_ilr) + ordered(depth_bin) + offset(log(effort_hours)),
family = poisson(link="log"),
data=master_noNA)
summary(M3)
#model selection
MuMIn :: dredge(M3)
master_noNA <- subset(master, master$net_type != "HOP")
#master_2 <- master_noNA[-c(19,25,34,46),], OUTLIERS
sub_ilr <- acomp(master_noNA[,17:20])
# the model
options(na.action = "na.fail")
M3 <- glmmTMB(matureAll_num ~ ilr(sub_ilr) + ordered(depth_bin) + offset(log(effort_hours)),
zi=~ilr(sub_ilr) + ordered(depth_bin),
family = nbinom2,
data=master_noNA)
summary(M3)
par(mfrow= c(1,1))
testDispersion(M3)
master_plant <- subset(master, master$avg_vegcover != "NA")
#master_plant <- master_plant[-c(19,25,34,46),], OUTLIERS
sub_ilr_plant <- acomp(master_plant[,17:20])
# the model
options(na.action = "na.fail")
M4 <- glmmTMB(matureAll_num ~ ilr(sub_ilr_plant) + ordered(depth_bin) + avg_vegcover + offset(log(effort_hours)),
zi=~ilr(sub_ilr_plant) + ordered(depth_bin) + avg_vegcover,
family = nbinom2,
data=master_plant)
summary(M4)
View(master_noNA)
M3 <- glmmTMB(matureAll_num ~ ilr(sub_ilr) + as.factor(depth_bin) + offset(log(effort_hours)),
zi=~ilr(sub_ilr) + as.factor(depth_bin),
family = nbinom2,
data=master_noNA)
summary(M3)
table(master_noNA$matureAll_num)
M3 <- glmmTMB(matureAll_num ~ ilr(sub_ilr) + as.factor(depth_bin) + offset(log(effort_hours)),
zi=~ilr(sub_ilr) + as.factor(depth_bin),
family = poisson(link="log"),
data=master_noNA)
summary(M3)
M3_resids <- simulateResiduals(M3)
par(mfrow=c(2,1))
plot(M3_resids)
plotResiduals(M3_resids, form= as.factor(master_noNA$depth_bin))
plotResiduals(M3_resids, form= master_noNA$ilr(sub_ilr))
plotResiduals(M3_resids, form= ilr(sub_ilr))
sub_ilr
